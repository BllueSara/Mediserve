// ุฏูุงู ูุงุฌูุฉ ุงููุณุชุฎุฏู ูุงูุตูุฑ ูุชูุงุฑูุฑ ุงูุชูุงุตูู

// ุงุณุชูุฑุงุฏ ุงููุชุบูุฑุงุช ุงููุทููุจุฉ - ุชุนุฑูู ูุชุบูุฑุงุช ุนุงูุฉ ูุฅุฏุงุฑุฉ ุงููุบุฉ ูุงูุชุฑุฌูุงุช
let languageManager, translations;

// ุชุฎุฒูู ูุคูุช ูุงุณุชุฏุนุงุกุงุช API - ุฅูุดุงุก ุฎุฑูุทุฉ ูุชุฎุฒูู ุงูุจูุงูุงุช ูุคูุชุงู
const apiCache = new Map();
// ุชุญุฏูุฏ ูุฏุฉ ุงูุชุฎุฒูู ุงููุคูุช - 5 ุฏูุงุฆู ุจุงููููู ุซุงููุฉ
const CACHE_DURATION = 5 * 60 * 1000; // 5 ุฏูุงุฆู

// ุฏุงูุฉ ูุชุนููู ุงููุชุบูุฑุงุช - ุชุนููู ูุฏูุฑ ุงููุบุฉ ูุงูุชุฑุฌูุงุช
export function setGlobalVariables(langManager, trans) {
  languageManager = langManager; // ุชุนููู ูุฏูุฑ ุงููุบุฉ
  translations = trans; // ุชุนููู ุงูุชุฑุฌูุงุช
}

// ุฏุงูุฉ ููุชุญูู ูู ุงูุชุฎุฒูู ุงููุคูุช - ุงูุจุญุซ ุนู ุงูุจูุงูุงุช ุงููุฎุฒูุฉ
function getCachedData(key) {
  const cached = apiCache.get(key); // ุงูุญุตูู ุนูู ุงูุจูุงูุงุช ุงููุฎุฒูุฉ
  // ุงูุชุญูู ูู ูุฌูุฏ ุงูุจูุงูุงุช ูุฃููุง ูู ุชูุชูู ุตูุงุญูุชูุง
  if (cached && Date.now() - cached.timestamp < CACHE_DURATION) {
    return cached.data; // ุฅุฑุฌุงุน ุงูุจูุงูุงุช ุฅุฐุง ูุงูุช ุตุงูุญุฉ
  }
  return null; // ุฅุฑุฌุงุน null ุฅุฐุง ูู ุชูู ุงูุจูุงูุงุช ููุฌูุฏุฉ ุฃู ููุชููุฉ ุงูุตูุงุญูุฉ
}

// ุฏุงูุฉ ูุญูุธ ุงูุจูุงูุงุช ูู ุงูุชุฎุฒูู ุงููุคูุช - ุญูุธ ุงูุจูุงูุงุช ูุน ุงูุทุงุจุน ุงูุฒููู
function setCachedData(key, data) {
  apiCache.set(key, {
    data, // ุงูุจูุงูุงุช ุงููุฑุงุฏ ุญูุธูุง
    timestamp: Date.now() // ุงูุทุงุจุน ุงูุฒููู ุงูุญุงูู
  });
}

// ุฏุงูุฉ ุชุญููู ุงูุตูุฑุฉ ุฅูู Base64 - ุชุญููู ุนูุตุฑ ุงูุตูุฑุฉ ุฅูู ูุต Base64
export function getImageBase64(imgElement) {
  const canvas = document.createElement("canvas"); // ุฅูุดุงุก ุนูุตุฑ canvas
  canvas.width = imgElement.naturalWidth; // ุชุนููู ุนุฑุถ canvas ูุนุฑุถ ุงูุตูุฑุฉ ุงูุทุจูุนู
  canvas.height = imgElement.naturalHeight; // ุชุนููู ุงุฑุชูุงุน canvas ูุงุฑุชูุงุน ุงูุตูุฑุฉ ุงูุทุจูุนู
  const ctx = canvas.getContext("2d"); // ุงูุญุตูู ุนูู ุณูุงู ุงูุฑุณู ุซูุงุฆู ุงูุฃุจุนุงุฏ
  ctx.drawImage(imgElement, 0, 0); // ุฑุณู ุงูุตูุฑุฉ ุนูู canvas
  return canvas.toDataURL("image/png"); // ุชุญููู canvas ุฅูู Base64 ุจุตูุบุฉ PNG
}

// ุฏุงูุฉ ุงูุชุธุงุฑ ุชุญููู ุงูุตูุฑ - ุงูุชุธุงุฑ ุงูุชูุงู ุชุญููู ุฌููุน ุงูุตูุฑ
export function waitForImagesToLoad(images) {
  return Promise.all(
    images.map(img => {
      return new Promise(resolve => {
        if (img.complete) resolve(); // ุฅุฐุง ูุงูุช ุงูุตูุฑุฉ ูุญููุฉ ุจุงููุนู
        else img.onload = () => resolve(); // ุงูุชุธุงุฑ ุชุญููู ุงูุตูุฑุฉ
      });
    })
  );
}

// ุฏุงูุฉ ุฅูุดุงุก ุนูุตุฑ select ูุนูุฏุฉ - ุฅูุดุงุก ูุงุฆูุฉ ุงุฎุชูุงุฑ ูุชูุฏูุฉ
export function createSelectElement(options, currentId, currentRawText, fieldId) {
  console.log("๐ createSelectElement called:", {
    fieldId: fieldId, // ูุนุฑู ุงูุญูู
    currentId: currentId, // ุงููุนุฑู ุงูุญุงูู
    currentRawText: currentRawText, // ุงููุต ุงูุฎุงู ุงูุญุงูู
    optionsCount: options.length // ุนุฏุฏ ุงูุฎูุงุฑุงุช
  });
  
  const select = document.createElement("select"); // ุฅูุดุงุก ุนูุตุฑ select
  select.style.minWidth = "140px"; // ุชุนููู ุงูุญุฏ ุงูุฃุฏูู ููุนุฑุถ
  select.style.padding  = "4px"; // ุชุนููู ุงูุชุจุงุนุฏ ุงูุฏุงุฎูู
  select.style.display  = "inline-block"; // ุชุนููู ููุน ุงูุนุฑุถ

  // ุฏุงูุฉ ุชูุธูู ุงูุตูุบุฉ [en]/[ar] ูุชูุณูู ุงูู pipe - ุชูุธูู ุงููุตูุต ูู ุงูุฑููุฒ ุงูุฎุงุตุฉ
  const clean = str => (str||"")
    .replace(/\[en\]$/i, "") // ุฅุฒุงูุฉ [en] ูู ููุงูุฉ ุงููุต
    .replace(/\[ar\]$/i, "") // ุฅุฒุงูุฉ [ar] ูู ููุงูุฉ ุงููุต
    .trim() // ุฅุฒุงูุฉ ุงููุณุงูุงุช ุงูุฒุงุฆุฏุฉ
    .split("|")[0]; // ุฃุฎุฐ ุงูุฌุฒุก ุงูุฃูู ูุจู |

  // 1) ุญุฏุฏ currentText ุงููุนุฑูุถ - ุชุญุฏูุฏ ุงููุต ุงููุนุฑูุถ ุญุงููุงู
  let currentText;
  if (fieldId === "department" || fieldId === "assigned-to") {
    const parts = (currentRawText||"").split("|").map(p=>p.trim()); // ุชูุณูู ุงููุต ุฅูู ุฃุฌุฒุงุก
    // ๐ง ุฅุตูุงุญ: ุงุณุชุฎุฏู ุงููุบุฉ ุงูุญุงููุฉ ุจุฏูุงู ูู ุงูุฅูุฌููุฒูุฉ ุฏุงุฆูุงู
    currentText = languageManager.currentLang === "ar" ? (parts[1]||parts[0]) : parts[0]; // ุงุฎุชูุงุฑ ุงูุฌุฒุก ุงูููุงุณุจ ุญุณุจ ุงููุบุฉ
  } else {
    currentText = clean(currentRawText); // ุชูุธูู ุงููุต ููุญููู ุงูุฃุฎุฑู
  }

  // 2) ุฅุฐุง ูุง ุนูุฏูุง currentIdุ ุฌุฑูุจ ุชุทุงุจู currentText ูุน options - ุงูุจุญุซ ุนู ุงููุนุฑู ุงููุนุงู
  let effectiveId = currentId; // ุงููุนุฑู ุงููุนุงู
  if (!effectiveId) {
    const match = options.find(opt => {
      // ๐ง ุฅุตูุงุญ: ุชุทุงุจู ุฃูุซุฑ ุฏูุฉ ูููููุฏุณูู
      if (fieldId === "assigned-to") {
        const optFullName = opt.fullName || opt.technician_name || opt.name || ""; // ุงูุงุณู ุงููุงูู ููุฎูุงุฑ
        const optParts = optFullName.split("|"); // ุชูุณูู ุงูุงุณู ุฅูู ุฃุฌุฒุงุก
        const optEn = optParts[0]?.trim() || ""; // ุงูุฌุฒุก ุงูุฅูุฌููุฒู
        const optAr = optParts[1]?.trim() || ""; // ุงูุฌุฒุก ุงูุนุฑุจู
        
        // ุชุทุงุจู ูุน ุงููุต ุงูุญุงูู
        return optEn === currentText || optAr === currentText || optFullName === currentText;
      } else {
        return clean(opt.fullName||opt.name||"") === currentText; // ุชุทุงุจู ููุฎูุงุฑุงุช ุงูุฃุฎุฑู
      }
    });
    if (match) effectiveId = String(match.id); // ุชุนููู ุงููุนุฑู ุฅุฐุง ุชู ุงูุนุซูุฑ ุนูู ุชุทุงุจู
  }

  console.log("๐ createSelectElement processing:", {
    currentText: currentText, // ุงููุต ุงูุญุงูู
    effectiveId: effectiveId, // ุงููุนุฑู ุงููุนุงู
    fieldId: fieldId // ูุนุฑู ุงูุญูู
  });

  // 3) ุจูุงุก ุฎูุงุฑ ุงูู placeholder ุจุงููููุฉ ุงูุตุญูุญุฉ - ุฅูุดุงุก ุงูุฎูุงุฑ ุงูุญุงูู
  if (currentText) {
    const optCurr = document.createElement("option"); // ุฅูุดุงุก ุฎูุงุฑ ุฌุฏูุฏ
    // ๐ง ุฅุตูุงุญ: ุชุฃูุฏ ูู ุฃู value ูุญุชูู ุนูู ID ุตุญูุญ
    optCurr.value = effectiveId || ""; // ุชุนููู ูููุฉ ุงูุฎูุงุฑ
    optCurr.textContent = currentText; // ุชุนููู ูุต ุงูุฎูุงุฑ
    optCurr.selected = true; // ุชุญุฏูุฏ ุงูุฎูุงุฑ ูู selected
    
    // ๐ง ุฅุตูุงุญ: ุงุญูุธ ุงูุงุณู ุงููุงูู ูู dataset.fullname
    if (fieldId === "assigned-to") {
      // ูููููุฏุณููุ ุงุจุญุซ ุนู ุงูุงุณู ุงููุงูู ูู ูุงุฆูุฉ ุงูุฎูุงุฑุงุช
      let fullNameToUse = currentRawText || currentText; // ุงูุงุณู ุงููุงูู ููุงุณุชุฎุฏุงู
      
      // ๐ง ุงุจุญุซ ุนู ุงูุฎูุงุฑ ุงููุทุงุจู ูู options ููุญุตูู ุนูู ุงูุงุณู ุงููุงูู
      const matchingOption = options.find(opt => {
        const optFullName = opt.fullName || opt.technician_name || opt.name || ""; // ุงูุงุณู ุงููุงูู ููุฎูุงุฑ
        const optParts = optFullName.split("|"); // ุชูุณูู ุงูุงุณู
        const optEn = optParts[0]?.trim() || ""; // ุงูุฌุฒุก ุงูุฅูุฌููุฒู
        const optAr = optParts[1]?.trim() || ""; // ุงูุฌุฒุก ุงูุนุฑุจู
        
        // ุชุทุงุจู ูุน ุงููุต ุงูุญุงูู ุฃู ุงูุงุณู ุงููุงูู
        return optEn === currentText || optAr === currentText || optFullName === currentText || optFullName === currentRawText;
      });
      
      if (matchingOption && matchingOption.fullName && matchingOption.fullName.includes("|")) {
        fullNameToUse = matchingOption.fullName; // ุงุณุชุฎุฏุงู ุงูุงุณู ุงููุงูู ุงููุทุงุจู
        console.log("๐ Found matching option for current engineer:", {
          currentText: currentText, // ุงููุต ุงูุญุงูู
          matchingFullName: fullNameToUse // ุงูุงุณู ุงููุงูู ุงููุทุงุจู
        });
      }
      
      optCurr.dataset.fullname = fullNameToUse; // ุญูุธ ุงูุงุณู ุงููุงูู ูู dataset
      
      // ๐ง ุฅุถุงูุฉ logging ููุตู ูููููุฏุณูู
      console.log("๐ Engineer option details:", {
        fieldId: fieldId, // ูุนุฑู ุงูุญูู
        currentText: currentText, // ุงููุต ุงูุญุงูู
        currentRawText: currentRawText, // ุงููุต ุงูุฎุงู ุงูุญุงูู
        fullNameToUse: fullNameToUse, // ุงูุงุณู ุงููุงูู ุงููุณุชุฎุฏู
        effectiveId: effectiveId, // ุงููุนุฑู ุงููุนุงู
        matchingOption: matchingOption ? {
          id: matchingOption.id, // ูุนุฑู ุงูุฎูุงุฑ ุงููุทุงุจู
          fullName: matchingOption.fullName // ุงูุงุณู ุงููุงูู ููุฎูุงุฑ ุงููุทุงุจู
        } : null
      });
    } else {
      optCurr.dataset.fullname = currentRawText || currentText; // ุญูุธ ุงูุงุณู ุงููุงูู ููุญููู ุงูุฃุฎุฑู
    }

    select.appendChild(optCurr); // ุฅุถุงูุฉ ุงูุฎูุงุฑ ุฅูู select

    // ุฎุฒูู ุงูู effectiveId ูุงููุคุดุฑุงุช ูููุง - ุญูุธ ุงูุจูุงูุงุช ูู dataset
    select.dataset.oldId = effectiveId || ""; // ุงููุนุฑู ุงููุฏูู
    select.dataset.currentId = effectiveId || ""; // ุงููุนุฑู ุงูุญุงูู
    select.dataset.oldText = currentRawText || ""; // ุงููุต ุงููุฏูู
    select.dataset.currentName = currentText; // ุงูุงุณู ุงูุญุงูู
    
    console.log("๐ Created current option:", {
      value: optCurr.value, // ูููุฉ ุงูุฎูุงุฑ
      textContent: optCurr.textContent, // ูุต ุงูุฎูุงุฑ
      fullname: optCurr.dataset.fullname // ุงูุงุณู ุงููุงูู
    });
  }

  // 4) ุจูุงุก ุจููุฉ ุงูุฎูุงุฑุงุช - ุฅูุดุงุก ุจุงูู ุงูุฎูุงุฑุงุช
  options.forEach(opt => {
    let raw; // ุงููุต ุงูุฎุงู ููุฎูุงุฑ
    switch (fieldId) {
      case "department":
      case "assigned-to":
        const parts = (opt.fullName||"").split("|"); // ุชูุณูู ุงูุงุณู ุงููุงูู
        // ๐ง ุฅุตูุงุญ: ุงุณุชุฎุฏู ุงููุบุฉ ุงูุญุงููุฉ ุจุฏูุงู ูู ุงูุฅูุฌููุฒูุฉ ุฏุงุฆูุงู
        raw = (languageManager.currentLang === "ar"
               ? (parts[1]||parts[0]) // ุงุณุชุฎุฏุงู ุงูุฌุฒุก ุงูุนุฑุจู
               : parts[0]).trim(); // ุงุณุชุฎุฏุงู ุงูุฌุฒุก ุงูุฅูุฌููุฒู
        break;
      case "generation": raw = clean(opt.generation_number); break; // ุชูุธูู ุฑูู ุงูุฌูู
      case "cpu":        raw = clean(opt.cpu_name);       break; // ุชูุธูู ุงุณู ุงููุนุงูุฌ
      case "ram":        raw = clean(opt.ram_type);       break; // ุชูุธูู ููุน ุงูุฐุงูุฑุฉ
      case "os":         raw = clean(opt.os_name);        break; // ุชูุธูู ุงุณู ูุธุงู ุงูุชุดุบูู
      case "hard_drive": raw = clean(opt.drive_type);     break; // ุชูุธูู ููุน ุงููุฑุต ุงูุตูุจ
      case "ram_size":   raw = clean(opt.ram_size);       break; // ุชูุธูู ุญุฌู ุงูุฐุงูุฑุฉ
      case "printer_type": raw = clean(opt.printer_type); break; // ุชูุธูู ููุน ุงูุทุงุจุนุฉ
      case "scanner_type": raw = clean(opt.scanner_type); break; // ุชูุธูู ููุน ุงููุงุณุญ ุงูุถูุฆู
      case "ink_type":     raw = clean(opt.ink_type);     break; // ุชูุธูู ููุน ุงูุญุจุฑ
      default:
        raw = clean(opt.fullName||opt.name||""); // ุชูุธูู ุงูุงุณู ุงููุงูู ุฃู ุงูุงุณู
    }

    // ุชุฌุงูู ุงูุชูุฑุงุฑ - ุชุฌุงูู ุงูุฎูุงุฑ ุฅุฐุง ูุงู ูุทุงุจูุงู ููุฎูุงุฑ ุงูุญุงูู
    if (String(opt.id) === select.dataset.currentId || raw === currentText) return;

    const o = document.createElement("option"); // ุฅูุดุงุก ุฎูุงุฑ ุฌุฏูุฏ
    // ๐ง ุฅุตูุงุญ: ุชุฃูุฏ ูู ุฃู value ูุญุชูู ุนูู ID ุตุญูุญ
    o.value = String(opt.id); // ุชุนููู ูููุฉ ุงูุฎูุงุฑ
    o.textContent = raw; // ุชุนููู ูุต ุงูุฎูุงุฑ
    // ๐ง ุฅุตูุงุญ: ุงุญูุธ ุงูุงุณู ุงููุงูู ุซูุงุฆู ุงููุบุฉ ูููููุฏุณูู ูุงูุฃูุณุงู
    if (fieldId === "assigned-to" || fieldId === "department") {
      o.dataset.fullname = opt.fullName || opt.name || ""; // ุญูุธ ุงูุงุณู ุงููุงูู ูููููุฏุณูู ูุงูุฃูุณุงู
    } else {
      o.dataset.fullname = opt.fullName||opt.name||raw; // ุญูุธ ุงูุงุณู ุงููุงูู ููุฎูุงุฑุงุช ุงูุฃุฎุฑู
    }
    select.appendChild(o); // ุฅุถุงูุฉ ุงูุฎูุงุฑ ุฅูู select
  });

  // ๐ง ุฅุถุงูุฉ event listener ูุชุญุฏูุซ dataset ุนูุฏ ุชุบููุฑ ุงูุงุฎุชูุงุฑ
  select.addEventListener("change", function() {
    const selectedOption = this.options[this.selectedIndex]; // ุงูุญุตูู ุนูู ุงูุฎูุงุฑ ุงููุญุฏุฏ
    if (selectedOption) {
      this.dataset.currentId = selectedOption.value; // ุชุญุฏูุซ ุงููุนุฑู ุงูุญุงูู
      this.dataset.currentName = selectedOption.textContent; // ุชุญุฏูุซ ุงูุงุณู ุงูุญุงูู
      console.log("๐ Select changed:", {
        fieldId: fieldId, // ูุนุฑู ุงูุญูู
        newValue: selectedOption.value, // ุงููููุฉ ุงูุฌุฏูุฏุฉ
        newText: selectedOption.textContent // ุงููุต ุงูุฌุฏูุฏ
      });
    }
  });

  console.log("๐ Final select created:", {
    fieldId: fieldId, // ูุนุฑู ุงูุญูู
    optionsCount: select.options.length, // ุนุฏุฏ ุงูุฎูุงุฑุงุช
    selectedIndex: select.selectedIndex, // ููุฑุณ ุงูุฎูุงุฑ ุงููุญุฏุฏ
    selectedValue: select.options[select.selectedIndex]?.value // ูููุฉ ุงูุฎูุงุฑ ุงููุญุฏุฏ
  });

  return select; // ุฅุฑุฌุงุน ุนูุตุฑ select
}

// ุฏุงูุฉ ุฌูุจ ุงูุฎูุงุฑุงุช ูู API - ุฌูุจ ุงูุจูุงูุงุช ูู ุงูุฎุงุฏู
export async function fetchOptions(apiUrl) {
  console.log("๐ Fetching options from:", apiUrl); // ุทุจุงุนุฉ ุฑุงุจุท API
  
  // ุงูุชุญูู ูู ุงูุชุฎุฒูู ุงููุคูุช ุฃููุงู - ุงูุจุญุซ ุนู ุงูุจูุงูุงุช ุงููุฎุฒูุฉ
  const cachedData = getCachedData(apiUrl); // ุงูุญุตูู ุนูู ุงูุจูุงูุงุช ุงููุฎุฒูุฉ
  if (cachedData) {
    console.log("๐ Using cached data for:", apiUrl); // ุงุณุชุฎุฏุงู ุงูุจูุงูุงุช ุงููุฎุฒูุฉ
    return cachedData; // ุฅุฑุฌุงุน ุงูุจูุงูุงุช ุงููุฎุฒูุฉ
  }
  
  const res = await fetch(apiUrl); // ุฌูุจ ุงูุจูุงูุงุช ูู API
  if (!res.ok) throw new Error("ูุดู ุฌูุจ ุงูุจูุงูุงุช ูู " + apiUrl); // ุฑูู ุฎุทุฃ ุฅุฐุง ูุดู ุงูุทูุจ
  const rawData = await res.json(); // ุชุญููู ุงูุงุณุชุฌุงุจุฉ ุฅูู JSON
  
  console.log("๐ Raw data from API:", rawData); // ุทุจุงุนุฉ ุงูุจูุงูุงุช ุงูุฎุงู

  const processedData = rawData.map(opt => {
    // ๐ง ุฅุตูุงุญ: ูุนุงูุฌุฉ ุฎุงุตุฉ ูููููุฏุณูู ูู API /Technical
    if (apiUrl.includes('/Technical')) {
      return {
        ...opt, // ูุณุฎ ุฌููุน ุฎุตุงุฆุต ุงูุฎูุงุฑ
        id: opt.id, // ูุนุฑู ุงูุฎูุงุฑ
        fullName: opt.name || "" // Engineers table has 'name' column with bilingual format
      };
    }
    
    return {
      ...opt, // ูุณุฎ ุฌููุน ุฎุตุงุฆุต ุงูุฎูุงุฑ
      fullName:
        opt.fullName ||
        opt.name ||
        opt.model_name ||
        opt.serial_number ||
        opt.printer_type ||
        opt.scanner_type ||
        opt.ink_type ||
        "" // ุงูุงุณู ุงููุงูู ุฃู ููู ุจุฏููุฉ
    };
  });
  
  console.log("๐ Processed data:", processedData); // ุทุจุงุนุฉ ุงูุจูุงูุงุช ุงููุนุงูุฌุฉ
  
  // ุญูุธ ุงูุจูุงูุงุช ูู ุงูุชุฎุฒูู ุงููุคูุช - ุญูุธ ุงูุจูุงูุงุช ููุงุณุชุฎุฏุงู ุงููุณุชูุจูู
  setCachedData(apiUrl, processedData);
  
  return processedData; // ุฅุฑุฌุงุน ุงูุจูุงูุงุช ุงููุนุงูุฌุฉ
}

// ุฏุงูุฉ ุชุนุจุฆุฉ ูุงุฆูุฉ ุงูููุฏููุงุช - ููุก ูุงุฆูุฉ ุงูููุงุฐุฌ
export async function populateModelDropdown(deviceTypeName, currentLang = "en") {
  const spanModel = document.getElementById("model"); // ุงูุญุตูู ุนูู ุนูุตุฑ ุงููููุฐุฌ
  if (!spanModel) return; // ุงูุฎุฑูุฌ ุฅุฐุง ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูุนูุตุฑ

  const currentModelId = spanModel.dataset.id || ""; // ูุนุฑู ุงููููุฐุฌ ุงูุญุงูู
  const currentModelRawText = spanModel.dataset.rawtext || spanModel.textContent.trim(); // ุงููุต ุงูุฎุงู ูููููุฐุฌ ุงูุญุงูู

  // ููุตู rawText ููุฅูุฌููุฒู ูุงูุนุฑุจู - ุชูุณูู ุงููุต ุฅูู ุฃุฌุฒุงุก
  const clean = currentModelRawText
    .replace(/\[en\]$/i, "") // ุฅุฒุงูุฉ [en] ูู ุงูููุงูุฉ
    .replace(/\[ar\]$/i, "") // ุฅุฒุงูุฉ [ar] ูู ุงูููุงูุฉ
    .trim(); // ุฅุฒุงูุฉ ุงููุณุงูุงุช ุงูุฒุงุฆุฏุฉ
  const [enName, arName] = clean.split("|").map(p => p.trim()); // ุชูุณูู ุงููุต ุฅูู ุงุณู ุฅูุฌููุฒู ูุนุฑุจู
  const displayName = currentLang === "ar" ? (arName || enName) : enName; // ุงุฎุชูุงุฑ ุงูุงุณู ุงููุนุฑูุถ ุญุณุจ ุงููุบุฉ

  // ุญุฏุฏ ุงูููุชุงุญ ุงูุฅููููุฒู ููู endpoint (ููุณ ูุง ุนูุฏู) - ุชุญุฏูุฏ ููุชุงุญ ููุน ุงูุฌูุงุฒ
  let key = deviceTypeName.trim().toLowerCase(); // ุชุญููู ุงุณู ููุน ุงูุฌูุงุฒ ุฅูู ููุชุงุญ
  if (/[^a-z0-9]/i.test(deviceTypeName)) {
    for (const engKey of Object.keys(translations.deviceType)) {
      if (translations.deviceType[engKey].ar === deviceTypeName) {
        key = engKey.toLowerCase(); // ุงุณุชุฎุฏุงู ุงูููุชุงุญ ุงูุฅูุฌููุฒู ุฅุฐุง ูุงู ุงููุต ุนุฑุจู
        break;
      }
    }
  }
  let endpoint; // ุฑุงุจุท API
  if (["pc", "laptop", "desktop"].includes(key)) endpoint = "http://localhost:4000/PC_Model"; // ุฑุงุจุท ููุงุฐุฌ ุงูุญุงุณูุจ
  else if (key === "printer") endpoint = "http://localhost:4000/Printer_Model"; // ุฑุงุจุท ููุงุฐุฌ ุงูุทุงุจุนุงุช
  else if (key === "scanner") endpoint = "http://localhost:4000/Scanner_Model"; // ุฑุงุจุท ููุงุฐุฌ ุงููุงุณุญุงุช ุงูุถูุฆูุฉ
  else endpoint = `http://localhost:4000/models-by-type/${encodeURIComponent(key)}`; // ุฑุงุจุท ุนุงู ููููุงุฐุฌ

  console.log("โถ Fetching endpoint:", endpoint); // ุทุจุงุนุฉ ุฑุงุจุท API

  // ุฌูุจ ุงูุจูุงูุงุช - ุฌูุจ ุงูุจูุงูุงุช ูู ุงูุฎุงุฏู
  let raw = []; // ูุตูููุฉ ุงูุจูุงูุงุช ุงูุฎุงู
  try {
    const res = await fetch(endpoint); // ุฌูุจ ุงูุจูุงูุงุช
    if (!res.ok) throw new Error(res.statusText); // ุฑูู ุฎุทุฃ ุฅุฐุง ูุดู ุงูุทูุจ
    raw = await res.json(); // ุชุญููู ุงูุงุณุชุฌุงุจุฉ ุฅูู JSON
  } catch {
    raw = []; // ุชุนููู ูุตูููุฉ ูุงุฑุบุฉ ูู ุญุงูุฉ ุงูุฎุทุฃ
  }

  // ููู ุงูุจูุงูุงุช ุฅูู modelOptions - ุชุญููู ุงูุจูุงูุงุช ุฅูู ุฎูุงุฑุงุช ุงูููุงุฐุฌ
  let modelOptions = []; // ูุตูููุฉ ุฎูุงุฑุงุช ุงูููุงุฐุฌ
  if (raw.length > 0) {
    const sample = raw[0]; // ุนููุฉ ูู ุงูุจูุงูุงุช
    if (sample.model_id != null && sample.model_name != null) {
      modelOptions = raw.map(i => ({ id: String(i.model_id), text: i.model_name })); // ุงุณุชุฎุฏุงู model_id ู model_name
    } else if (sample.id != null && sample.name != null) {
      modelOptions = raw.map(i => ({ id: String(i.id), text: i.name })); // ุงุณุชุฎุฏุงู id ู name
    } else {
      modelOptions = raw.map(i => ({
        id: String(i.id || i.model_name || JSON.stringify(i)), // ูุนุฑู ุงููููุฐุฌ
        text: String(i.model_name || i.name || JSON.stringify(i)) // ุงุณู ุงููููุฐุฌ
      }));
    }
  }
  console.log("โถ Parsed modelOptions:", modelOptions); // ุทุจุงุนุฉ ุฎูุงุฑุงุช ุงูููุงุฐุฌ

  // ุงุจูู ุงูู <select> - ุฅูุดุงุก ุนูุตุฑ select
  const selectModel = document.createElement("select"); // ุฅูุดุงุก ุนูุตุฑ select
  selectModel.id = "model-select"; // ุชุนููู ูุนุฑู ุงูุนูุตุฑ
  selectModel.style.minWidth = "140px"; // ุชุนููู ุงูุญุฏ ุงูุฃุฏูู ููุนุฑุถ
  selectModel.style.padding = "4px"; // ุชุนููู ุงูุชุจุงุนุฏ ุงูุฏุงุฎูู

  // ๐ ูุฐุง ุงูุฎูุงุฑ ุงูุฃูู ุฏุงุฆูุงู ูู ุงูููุฏูู ุงูุญุงูู - ุฅูุดุงุก ุงูุฎูุงุฑ ุงูุญุงูู
  const placeholder = document.createElement("option"); // ุฅูุดุงุก ุฎูุงุฑ ุฌุฏูุฏ
  placeholder.value = currentModelId;       // โ ููุง ID - ุชุนููู ูููุฉ ุงูุฎูุงุฑ
  placeholder.textContent = displayName;          // โ ุงุณู ุธุงูุฑ - ุชุนููู ูุต ุงูุฎูุงุฑ
  placeholder.selected = true; // ุชุญุฏูุฏ ุงูุฎูุงุฑ ูู selected
  selectModel.appendChild(placeholder); // ุฅุถุงูุฉ ุงูุฎูุงุฑ ุฅูู select

  // ุจุนุฏูู ุฅุฐุง ููู ูุชุงุฆุฌ ูู ุงูุณูุฑูุฑุ ุถูููู ุชุญุช - ุฅุถุงูุฉ ุจุงูู ุงูุฎูุงุฑุงุช
  modelOptions.forEach(opt => {
    const o = document.createElement("option"); // ุฅูุดุงุก ุฎูุงุฑ ุฌุฏูุฏ
    o.value = opt.id;       // โ model_id ูุนูู - ุชุนููู ูููุฉ ุงูุฎูุงุฑ
    o.textContent = opt.text;     // โ ุงุณู ุงูููุฏูู ูููุณุชุฎุฏู - ุชุนููู ูุต ุงูุฎูุงุฑ
    o.dataset.name = opt.text;    // โ ูู ุงุญุชุฌุช ุชุฎุฒูู ุงูุงุณู ูู data attribute - ุญูุธ ุงูุงุณู ูู dataset
    selectModel.appendChild(o); // ุฅุถุงูุฉ ุงูุฎูุงุฑ ุฅูู select
  });

  if (spanModel) spanModel.replaceWith(selectModel); // ุงุณุชุจุฏุงู ุนูุตุฑ span ุจุนูุตุฑ select
} 